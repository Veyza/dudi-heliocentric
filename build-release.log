mkdir -p bin
mkdir -p build
gfortran -O3 -fimplicit-none -Wall -Wno-tabs -Wno-unused-variable -Jbuild -Ibuild src/const.f90 src/define_types.f90 src/help.f90 src/distributions_fun.f90 src/twobody_fun.f90 src/data_in.f90 src/data_out.f90 src/DUDIhc.f90 src/phaethon_input.f90  examples/example.f90 -o bin/dudihc 
src/help.f90:365:36:

  365 |                                 omega1 = -qq / 2d0 + sqrt(cmplx(qq**2 / 4d0 + pp**3 / 27d0))
      |                                                                1
Warning: Conversion from REAL(8) to default-kind COMPLEX(4) at (1) might lose precision, consider using the KIND argument [-Wconversion]
src/help.f90:366:36:

  366 |                                 omega2 = -qq / 2d0 - sqrt(cmplx(qq**2 / 4d0 + pp**3 / 27d0))
      |                                                                1
Warning: Conversion from REAL(8) to default-kind COMPLEX(4) at (1) might lose precision, consider using the KIND argument [-Wconversion]
src/help.f90:372:26:

  372 |                                                      * cmplx(cos((phi1 + twopi * (k-1)) / 3d0), &
      |                                                             1
Warning: Conversion from REAL(8) to default-kind COMPLEX(4) at (1) might lose precision, consider using the KIND argument [-Wconversion]
src/help.f90:376:26:

  376 |                                                      * cmplx(cos((phi2 + twopi * (k-1)) / 3d0), &
      |                                                             1
Warning: Conversion from REAL(8) to default-kind COMPLEX(4) at (1) might lose precision, consider using the KIND argument [-Wconversion]
src/help.f90:152:22:

  152 |                           integer i, i1, i2
      |                                           ^
Warning: ‘i2’ may be used uninitialized [-Wmaybe-uninitialized]
src/help.f90:175:61:

  175 |                           yout = y(i1) + (y(i2) - y(i1)) / (x2 - x1) * (xout - x1)
      |                                                                                  ^
Warning: ‘x1’ may be used uninitialized [-Wmaybe-uninitialized]
src/help.f90:151:21:

  151 |                           real(8) yout, x1, x2
      |                                          ^
note: ‘x1’ was declared here
src/help.f90:175:61:

  175 |                           yout = y(i1) + (y(i2) - y(i1)) / (x2 - x1) * (xout - x1)
      |                                                                                  ^
Warning: ‘x2’ may be used uninitialized [-Wmaybe-uninitialized]
src/help.f90:151:25:

  151 |                           real(8) yout, x1, x2
      |                                              ^
note: ‘x2’ was declared here
src/distributions_fun.f90:203:30:

  203 |                         lat = acos(utmp(3))            ! polar angle
      |                              1
Warning: Possible change of value in conversion from REAL(8) to REAL(4) at (1) [-Wconversion]
src/distributions_fun.f90:204:30:

  204 |                         lat = halfpi - lat                ! latitude
      |                              1
Warning: Possible change of value in conversion from REAL(8) to REAL(4) at (1) [-Wconversion]
src/distributions_fun.f90:205:30:

  205 |                         lon = atan(utmp(2), utmp(1))
      |                              1
Warning: Possible change of value in conversion from REAL(8) to REAL(4) at (1) [-Wconversion]
src/distributions_fun.f90:206:44:

  206 |                         if(lon < 0d0) lon = twopi + lon
      |                                            1
Warning: Possible change of value in conversion from REAL(8) to REAL(4) at (1) [-Wconversion]
src/distributions_fun.f90:207:30:

  207 |                         lon = twopi - lon
      |                              1
Warning: Possible change of value in conversion from REAL(8) to REAL(4) at (1) [-Wconversion]
src/distributions_fun.f90:244:39:

  244 |                                 klon = (lon - lonmax) / 0.03490659d0
      |                                       1
Warning: Possible change of value in conversion from REAL(8) to REAL(4) at (1) [-Wconversion]
src/distributions_fun.f90:247:39:

  247 |                                 klon = 0.5d0 + lon / 0.03490659d0
      |                                       1
Warning: Possible change of value in conversion from REAL(8) to REAL(4) at (1) [-Wconversion]
src/distributions_fun.f90:251:35:

  251 |                         prerate1 = ratemap(ind2, ii1) + klat * (ratemap(ind2, ind1) - ratemap(ind2, ii1))
      |                                   1
Warning: Possible change of value in conversion from REAL(8) to REAL(4) at (1) [-Wconversion]
src/distributions_fun.f90:252:35:

  252 |                         prerate2 = ratemap(ii2, ii1) + klat * (ratemap(ii2, ind1) - ratemap(ii2, ii1))
      |                                   1
Warning: Possible change of value in conversion from REAL(8) to REAL(4) at (1) [-Wconversion]
src/distributions_fun.f90:119:23:

  119 |                 lats = lats * deg2rad
      |                       1
Warning: Possible change of value in conversion from REAL(8) to REAL(4) at (1) [-Wconversion]
src/distributions_fun.f90:120:23:

  120 |                 lons = lons * deg2rad
      |                       1
Warning: Possible change of value in conversion from REAL(8) to REAL(4) at (1) [-Wconversion]
src/distributions_fun.f90:78:23:

   78 |                 lats = lats * deg2rad
      |                       1
Warning: Possible change of value in conversion from REAL(8) to REAL(4) at (1) [-Wconversion]
src/distributions_fun.f90:79:23:

   79 |                 lons = lons * deg2rad
      |                       1
Warning: Possible change of value in conversion from REAL(8) to REAL(4) at (1) [-Wconversion]
src/distributions_fun.f90:30:72:

   30 |         real(8) rmap1(nlons, nlats), rmap2(nlons, nlats), ratemap(nlons, nlats)
      |                                                                               1
Warning: Array ‘ratemap’ at (1) is larger than limit set by ‘-fmax-stack-var-size=’, moved from stack to static storage. This makes the procedure unsafe when called recursively, or concurrently from multiple threads. Consider increasing the ‘-fmax-stack-var-size=’ limit (or use ‘-frecursive’, which implies unlimited ‘-fmax-stack-var-size’) - or change the code to use an ALLOCATABLE array. If the variable is never accessed concurrently, this warning can be ignored, and the variable could also be declared with the SAVE attribute. [-Wsurprising]
src/distributions_fun.f90:30:28:

   30 |         real(8) rmap1(nlons, nlats), rmap2(nlons, nlats), ratemap(nlons, nlats)
      |                                   1
Warning: Array ‘rmap1’ at (1) is larger than limit set by ‘-fmax-stack-var-size=’, moved from stack to static storage. This makes the procedure unsafe when called recursively, or concurrently from multiple threads. Consider increasing the ‘-fmax-stack-var-size=’ limit (or use ‘-frecursive’, which implies unlimited ‘-fmax-stack-var-size’) - or change the code to use an ALLOCATABLE array. If the variable is never accessed concurrently, this warning can be ignored, and the variable could also be declared with the SAVE attribute. [-Wsurprising]
src/distributions_fun.f90:30:49:

   30 |         real(8) rmap1(nlons, nlats), rmap2(nlons, nlats), ratemap(nlons, nlats)
      |                                                        1
Warning: Array ‘rmap2’ at (1) is larger than limit set by ‘-fmax-stack-var-size=’, moved from stack to static storage. This makes the procedure unsafe when called recursively, or concurrently from multiple threads. Consider increasing the ‘-fmax-stack-var-size=’ limit (or use ‘-frecursive’, which implies unlimited ‘-fmax-stack-var-size’) - or change the code to use an ALLOCATABLE array. If the variable is never accessed concurrently, this warning can be ignored, and the variable could also be declared with the SAVE attribute. [-Wsurprising]
src/distributions_fun.f90:337:43:

  337 |                         end function ejection_speed_distribution
      |                                                                ^
Warning: ‘fu’ may be used uninitialized [-Wmaybe-uninitialized]
src/distributions_fun.f90:307:57:

  307 |                         function ejection_speed_distribution(ud, u) result(fu)
      |                                                                              ^
note: ‘fu’ was declared here
src/distributions_fun.f90:264:28:

  264 |                                         fpsi = fpsi * abs(Jpsi)
      |                                                               ^
Warning: ‘fpsi’ may be used uninitialized [-Wmaybe-uninitialized]
src/distributions_fun.f90:138:66:

  138 |                                             wpsi, psi, lambdaM, zeta, eta) result(fpsi)
      |                                                                                       ^
note: ‘fpsi’ was declared here
src/twobody_fun.f90:265:33:

  265 |                                 because the analytical expression contains numerically difficult parts'
      |                                 1
Warning: Missing ‘&’ in continued character constant at (1) [-Wampersand]
src/twobody_fun.f90:351:33:

  351 |                                 because the analytical expression contains numerically difficult parts'
      |                                 1
Warning: Missing ‘&’ in continued character constant at (1) [-Wampersand]
src/twobody_fun.f90:480:21:

  480 |                     in case of delta-ejection:', Integrand
      |                     1
Warning: Missing ‘&’ in continued character constant at (1) [-Wampersand]
src/twobody_fun.f90:1376:21:

 1376 |                     in case of delta-ejection:', Integrand
      |                     1
Warning: Missing ‘&’ in continued character constant at (1) [-Wampersand]
src/twobody_fun.f90:136:29:

  136 |                         dd = dx + dv * roots(ind) + da / 2d0 * roots(ind)**2
      |                             1
Warning: Possible change of value in conversion from COMPLEX(8) to REAL(8) at (1) [-Wconversion]
src/twobody_fun.f90:472:36:

  472 |                         Integrand = fac1 * fac2 / fac3 * s%Nparticles
      |                                    1
Warning: Possible change of value in conversion from REAL(8) to REAL(4) at (1) [-Wconversion]
src/twobody_fun.f90:1234:62:

 1234 |                                             point, dphi, dbeta, s, &
      |                                                              1
Warning: Unused dummy argument ‘dbeta’ at (1) [-Wunused-dummy-argument]
src/twobody_fun.f90:820:45:

  820 |             subroutine control(muR, theta, ee, phi, vv, r0, rm0, &
      |                                             1
Warning: Unused dummy argument ‘ee’ at (1) [-Wunused-dummy-argument]
src/twobody_fun.f90:724:73:

  724 |             subroutine deltat_num_derivatives(mu, v, theta, r, r0, u, psi, &
      |                                                                         1
Warning: Unused dummy argument ‘psi’ at (1) [-Wunused-dummy-argument]
src/twobody_fun.f90:724:68:

  724 |             subroutine deltat_num_derivatives(mu, v, theta, r, r0, u, psi, &
      |                                                                    1
Warning: Unused dummy argument ‘u’ at (1) [-Wunused-dummy-argument]
src/twobody_fun.f90:372:52:

  372 |                                          dphi, dbeta, s, muR, dt, &
      |                                                    1
Warning: Unused dummy argument ‘dbeta’ at (1) [-Wunused-dummy-argument]
src/twobody_fun.f90:371:44:

  371 |                                           ee, psi, theta, point, &
      |                                            1
Warning: Unused dummy argument ‘ee’ at (1) [-Wunused-dummy-argument]
src/twobody_fun.f90:63:64:

   63 |             subroutine collision_check(muR, dt, coords, s, point, &
      |                                                                1
Warning: Unused dummy argument ‘point’ at (1) [-Wunused-dummy-argument]
src/twobody_fun.f90:136:76:

  136 |                         dd = dx + dv * roots(ind) + da / 2d0 * roots(ind)**2
      |                                                                            ^
Warning: ‘ind’ may be used uninitialized [-Wmaybe-uninitialized]
src/twobody_fun.f90:71:30:

   71 |                 integer i, ind
      |                              ^
note: ‘ind’ was declared here
src/DUDIhc.f90:387:34:

  387 |                         density = density + ldif * wi(i) * term
      |                                  1
Warning: Possible change of value in conversion from REAL(8) to REAL(4) at (1) [-Wconversion]
src/DUDIhc.f90:390:30:

  390 |                     density = density / point%r / source%r / sin(dphi) / AU**3
      |                              1
Warning: Possible change of value in conversion from REAL(8) to REAL(4) at (1) [-Wconversion]
src/DUDIhc.f90:235:22:

  235 |             density = density / sin(dphi) / point%r / source%r / AU**3
      |                      1
Warning: Possible change of value in conversion from REAL(8) to REAL(4) at (1) [-Wconversion]
src/DUDIhc.f90:55:26:

   55 |                 density = source%Nparticles * fac1 * fac2 / dt
      |                          1
Warning: Possible change of value in conversion from REAL(8) to REAL(4) at (1) [-Wconversion]
src/DUDIhc.f90:57:26:

   57 |                 density = density / AU**3 / (dist**2) / sin(psi)
      |                          1
Warning: Possible change of value in conversion from REAL(8) to REAL(4) at (1) [-Wconversion]
src/DUDIhc.f90:322:19:

  322 |                 if(dttmp < dt) then
      |                   ^
Warning: ‘dttmp_lsm0.90’ may be used uninitialized [-Wmaybe-uninitialized]
src/DUDIhc.f90:337:40:

  337 |         subroutine hc_DUDI_v_integration(density, point, source, &
      |                                        ^
note: ‘dttmp_lsm0.90’ was declared here
src/DUDIhc.f90:376:30:

  376 |                 ldif = v2 - v1
      |                              ^
Warning: ‘v1’ may be used uninitialized [-Wmaybe-uninitialized]
src/DUDIhc.f90:349:34:

  349 |             real(8) vmax, vmin, v1, v2, vmid
      |                                  ^
note: ‘v1’ declared here
src/DUDIhc.f90:322:19:

  322 |                 if(dttmp < dt) then
      |                   ^
Warning: ‘dttmp_lsm0.89’ may be used uninitialized [-Wmaybe-uninitialized]
src/DUDIhc.f90:337:40:

  337 |         subroutine hc_DUDI_v_integration(density, point, source, &
      |                                        ^
note: ‘dttmp_lsm0.89’ was declared here
src/DUDIhc.f90:376:30:

  376 |                 ldif = v2 - v1
      |                              ^
Warning: ‘v2’ may be used uninitialized [-Wmaybe-uninitialized]
src/DUDIhc.f90:349:38:

  349 |             real(8) vmax, vmin, v1, v2, vmid
      |                                      ^
note: ‘v2’ declared here
src/DUDIhc.f90:322:19:

  322 |                 if(dttmp < dt) then
      |                   ^
Warning: ‘dttmp_lsm0.127’ may be used uninitialized [-Wmaybe-uninitialized]
src/DUDIhc.f90:306:28:

  306 |         subroutine bisection(dt, v, vmin, vmax, muR, r, r0, dphi, pericenter)
      |                            ^
note: ‘dttmp_lsm0.127’ was declared here
src/phaethon_input.f90:256:53:

  256 |                                           VVast, Vast, cntrpx, cntrpy)
      |                                                     1
Warning: Unused dummy argument ‘vast’ at (1) [-Wunused-dummy-argument]
src/phaethon_input.f90:256:47:

  256 |                                           VVast, Vast, cntrpx, cntrpy)
      |                                               1
Warning: Unused dummy argument ‘vvast’ at (1) [-Wunused-dummy-argument]
src/phaethon_input.f90:187:10:

  187 |       use distributions_fun
      |          1
Warning: Array ‘ratemap’ at (1) is larger than limit set by ‘-fmax-stack-var-size=’, moved from stack to static storage. This makes the procedure unsafe when called recursively, or concurrently from multiple threads. Consider increasing the ‘-fmax-stack-var-size=’ limit (or use ‘-frecursive’, which implies unlimited ‘-fmax-stack-var-size’) - or change the code to use an ALLOCATABLE array. If the variable is never accessed concurrently, this warning can be ignored, and the variable could also be declared with the SAVE attribute. [-Wsurprising]
src/phaethon_input.f90:145:18:

  145 |                                                                                         firstrM, VVast1, Vast1)
      |                                                                                               1
Warning: Unused dummy argument ‘firstrm’ at (1) [-Wunused-dummy-argument]
src/phaethon_input.f90:144:85:

  144 |         subroutine get_flyby_trajectory(points, nt1, resolution, CAdist, lastrM, VVast, Vast, &
      |                                                                                            1
Warning: Unused dummy argument ‘vast’ at (1) [-Wunused-dummy-argument]
src/phaethon_input.f90:145:33:

  145 |                                                                                         firstrM, VVast1, Vast1)
      |                                                                                                              1
Warning: Unused dummy argument ‘vast1’ at (1) [-Wunused-dummy-argument]
src/phaethon_input.f90:144:79:

  144 |         subroutine get_flyby_trajectory(points, nt1, resolution, CAdist, lastrM, VVast, Vast, &
      |                                                                                      1
Warning: Unused dummy argument ‘vvast’ at (1) [-Wunused-dummy-argument]
src/phaethon_input.f90:145:26:

  145 |                                                                                         firstrM, VVast1, Vast1)
      |                                                                                                       1
Warning: Unused dummy argument ‘vvast1’ at (1) [-Wunused-dummy-argument]
src/phaethon_input.f90:49:48:

   49 |    subroutine get_moving_sources(fname, Np, Neph, Nlin, &
      |                                                1
Warning: Unused dummy argument ‘neph’ at (1) [-Wunused-dummy-argument]
src/phaethon_input.f90:54:10:

   54 |       use distributions_fun
      |          1
Warning: Array ‘rmap1’ at (1) is larger than limit set by ‘-fmax-stack-var-size=’, moved from stack to static storage. This makes the procedure unsafe when called recursively, or concurrently from multiple threads. Consider increasing the ‘-fmax-stack-var-size=’ limit (or use ‘-frecursive’, which implies unlimited ‘-fmax-stack-var-size’) - or change the code to use an ALLOCATABLE array. If the variable is never accessed concurrently, this warning can be ignored, and the variable could also be declared with the SAVE attribute. [-Wsurprising]
src/phaethon_input.f90:54:10:

   54 |       use distributions_fun
      |          1
Warning: Array ‘rmap2’ at (1) is larger than limit set by ‘-fmax-stack-var-size=’, moved from stack to static storage. This makes the procedure unsafe when called recursively, or concurrently from multiple threads. Consider increasing the ‘-fmax-stack-var-size=’ limit (or use ‘-frecursive’, which implies unlimited ‘-fmax-stack-var-size’) - or change the code to use an ALLOCATABLE array. If the variable is never accessed concurrently, this warning can be ignored, and the variable could also be declared with the SAVE attribute. [-Wsurprising]
